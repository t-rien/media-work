import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.Arrays;

class MoveByKeyPanel extends JPanel implements KeyListener{
    private int x=200, y=200;   //座標
    private int xbomb[] = new int[100]; //爆弾のx座標で初期値0
    private int ybomb[] = new int[100]; //爆弾のy座標で初期値0
    private int move = 40;       //移動距離
    private int r = 30;
    private int i = 0;           //爆弾の配列の添字
    public MoveByKeyPanel(){
	this.setBackground(Color.white);
	this.setFocusable(true);
	this.addKeyListener(this);
	for(int j = 0; j < 100;j++) xbomb[j] = 1000; //爆弾を見えないところにおいておく
    }
    protected void paintComponent(Graphics g){
	super.paintComponent(g);
	g.setColor(Color.BLUE); //主人公は青色
	g.fillOval(x, y, r, r);
	g.setColor(Color.RED); //爆弾は赤色
	for(int j = 0;j <100;j++){  
	    g.fillOval(xbomb[j], ybomb[j], r, r);
	}                        //爆弾を１００個まで生成
   }
   public void keyPressed(KeyEvent e){
      int k = e.getKeyCode();
      switch(k){
        case KeyEvent.VK_RIGHT:
          x = x+move; 
          break;
        case KeyEvent.VK_LEFT:
          x = x-move; 
          break;
        case KeyEvent.VK_DOWN:
          y = y+move;
          break;
        case KeyEvent.VK_UP:
          y = y-move; 
          break;
        case KeyEvent.VK_SPACE: //爆弾を置く
	    xbomb[i] = x;
	    ybomb[i] = y;
	    i++;
	  break;
      }
      repaint();
   }
   public void keyTyped(KeyEvent e){ 
     char c = e.getKeyChar();
     switch(c){
       case 'f':
         x = x+move; 
         break;
       case 'b':
         x = x-move; 
         break;
       case 'd':
         y = y+move;
         break;
       case 'u':
         y = y-move; 
         break;
     }
     repaint();
   }
   public void keyReleased(KeyEvent e){ }
}

class MoveByKeyFrame extends JFrame {
  public MoveByKeyFrame(){
    this.setTitle("MoveByKey Frame");
    this.setSize(500,500);
    this.add(new MoveByKeyPanel());
    this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    this.setVisible(true);
  }
  public static void main(String argv[]) {
    new MoveByKeyFrame();
 }
}
